{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Nav.tsx","webpack://gatsby-starter-default/./styles/globalStyle.ts","webpack://gatsby-starter-default/./src/components/Blog.tsx","webpack://gatsby-starter-default/./src/components/Layout.tsx","webpack://gatsby-starter-default/./styles/theme.ts"],"names":["useContext","ThemeContext","themeMode","onToggle","theme","themeGroup","css","Container","LeftBox","S","src","width","quality","placeholder","formats","alt","layout","Image","Home","to","RightBox","Category","onClick","bgColor","fontColor","THEME","Title","CategoryBox","Number","pageTitle","children","styles","GlobalStyle","childrenContainer","light","postTitle","categoryTitle","dark"],"mappings":"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","file":"359b8be1dba5610ba2cc39b7c66db9f0b0e85f47-1b268a251e6efdfa077b.js","sourcesContent":["import React, { useContext } from \"react\"\nimport { css } from \"@emotion/react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport themeGroup, { Theme } from \"../../styles/theme\"\nimport { ThemeContext } from \"../components/ThemeContext\"\n\nconst Nav = () => {\n  const [themeMode, onToggle] = useContext(ThemeContext)\n  const theme = themeGroup[themeMode]\n\n  return (\n    <div css={Container(theme)}>\n      <div css={LeftBox}>\n        {themeMode === \"light\" ? (\n          <StaticImage\n            src=\"../images/moon_off.png\"\n            width={30}\n            quality={100}\n            placeholder=\"blurred\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"A Gatsby astronaut\"\n            layout=\"fixed\"\n            css={Image}\n          />\n        ) : (\n          <StaticImage\n            src=\"../images/moon_on.png\"\n            width={30}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"A Gatsby astronaut\"\n            placeholder=\"blurred\"\n            layout=\"fixed\"\n            css={Image}\n          />\n        )}\n        <Link css={Home(theme)} to=\"/\">\n          Moon.log\n        </Link>\n      </div>\n      <div css={RightBox}>\n        <Link css={Category(theme)} to=\"/\">\n          Blog\n        </Link>\n        <Link css={Category(theme)} to=\"/portfolio\">\n          Portfolio\n        </Link>\n        <Link css={Category(theme)} to=\"/about\">\n          About\n        </Link>\n        {themeMode === \"light\" ? (\n          <StaticImage\n            src=\"../images/sun.png\"\n            width={25}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"A Gatsby astronaut\"\n            placeholder=\"blurred\"\n            layout=\"fixed\"\n            css={Image}\n            onClick={onToggle}\n          />\n        ) : (\n          <StaticImage\n            src=\"../images/moon.png\"\n            width={25}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"A Gatsby astronaut\"\n            placeholder=\"blurred\"\n            layout=\"fixed\"\n            css={Image}\n            onClick={onToggle}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Nav\n\nconst Container = (theme: Theme) => css`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  border-bottom: 0.1px solid #e0e0e0;\n  padding: 0.5rem 1rem 0.3rem 1rem;\n  background: ${theme.bgColor};\n  opacity: 0.8;\n  backdrop-filter: blur(10px);\n  z-index: 1;\n\n  @media (max-width: 375px) {\n  }\n`\n\nconst LeftBox = css`\n  display: flex;\n  align-items: center;\n`\n\nconst RightBox = css`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`\n\nconst Image = css`\n  margin-right: 0.4rem;\n  cursor: pointer;\n`\n\nconst Category = (theme: Theme) => css`\n  padding-right: 1rem;\n  text-decoration: none;\n  color: ${theme.fontColor};\n\n  &:hover {\n    color: #9e9e9e;\n  }\n\n  @media (max-width: 425px) {\n    font-size: 0.8rem;\n  }\n`\n\nconst Home = (theme: Theme) => css`\n  text-decoration: none;\n  color: ${theme.fontColor};\n\n  @media (max-width: 425px) {\n    font-size: 0.8rem;\n  }\n`\n","import {css} from \"@emotion/react\";\nimport {Theme} from \"./theme\";\n\n\nconst GlobalStyle = (theme :Theme) => (css`\n  body {\n    background-color: ${theme.bgColor};\n\n  }\n`)\n\nexport default GlobalStyle;","import React, { useContext } from \"react\"\nimport \"../../styles/style.css\"\nimport { Link } from \"gatsby\"\nimport { css } from \"@emotion/react\"\nimport THEME, { Theme } from \"../../styles/theme\"\nimport { ThemeContext } from \"../components/ThemeContext\"\n\nconst Blog = () => {\n  const [themeMode, onToggle] = useContext(ThemeContext)\n  const theme = THEME[themeMode]\n\n  return (\n    <div css={Container}>\n      <span css={Title(theme)}>Blog</span>\n      <div>\n        <div css={CategoryBox}>\n          <span css={Number(theme)}>01</span>\n          <Link to=\"/javascript\" css={Category(theme)}>\n            Javascript\n          </Link>\n        </div>\n        <div css={CategoryBox}>\n          <span css={Number(theme)}>02</span>\n          <Link to=\"/react\" css={Category(theme)}>\n            React\n          </Link>\n        </div>\n        <div css={CategoryBox}>\n          <span css={Number(theme)}>03</span>\n          <Link to=\"/react-native\" css={Category(theme)}>\n            React Native\n          </Link>\n        </div>\n        <div css={CategoryBox}>\n          <span css={Number(theme)}>04</span>\n          <Link to=\"/gatsby\" css={Category(theme)}>\n            Gatsby\n          </Link>\n        </div>\n        <div css={CategoryBox}>\n          <span css={Number(theme)}>05</span>\n          <Link to=\"/interview\" css={Category(theme)}>\n            Tech Interview\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Blog\n\nconst Container = () => css`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  padding: 6rem 0 0 10rem;\n  flex-direction: column;\n\n  @media (max-width: 500px) {\n    padding: 4rem 0 0 3rem;\n  }\n`\nconst Title = (theme: Theme) => css`\n  font-size: 2.5rem;\n  border-bottom: 1px solid #bdbdbd;\n  width: 5rem;\n  margin-left: 2rem;\n  font-family: \"Athiti\";\n\n  color: ${theme.fontColor};\n\n  @media (max-width: 375px) {\n    font-size: 2rem;\n    width: 4rem;\n  }\n`\nconst CategoryBox = css`\n  margin-top: 3rem;\n  display: flex;\n  align-items: center;\n`\nconst Category = (theme: Theme) => css`\n  font-size: 2rem;\n  margin-left: 1rem;\n  text-decoration: none;\n  font-family: \"Athiti\";\n  color: ${theme.fontColor};\n\n  @media (max-width: 375px) {\n    font-size: 1.8rem;\n  }\n`\n\nconst Number = (theme: Theme) => css`\n  font-family: \"Athiti\";\n\n  color: ${theme.fontColor};\n`\n","import React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\nimport Nav from \"./Nav\"\nimport GlobalStyle from \"../../styles/globalStyle\"\nimport { css, Global } from \"@emotion/react\"\nimport themeGroup from \"../../styles/theme\"\nimport Blog from \"./Blog\"\nimport { ThemeContext } from \"../components/ThemeContext\"\n\ntype Props = {\n  children?: any\n  pageTitle?: string\n}\n\nconst Layout = ({ pageTitle, children }: Props) => {\n  const [themeMode, onToggle] = useContext(ThemeContext)\n  const theme = themeGroup[themeMode]\n\n  return (\n    <>\n      <Global styles={GlobalStyle(theme)} />\n      <Nav />\n      {pageTitle === \"home\" ? (\n        <Blog />\n      ) : (\n        <div css={childrenContainer}>{children}</div>\n      )}\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n\nconst childrenContainer = css`\n  margin-top: 4rem;\n\n`\n","export interface Theme {\n  bgColor: string\n  fontColor: string\n  postTitle: string\n  categoryTitle:string\n}\nexport interface ThemeGroup {\n  light: Theme\n  dark: Theme\n}\n\nexport const light: Theme = {\n  bgColor: \"#EEF2F5\",\n  fontColor: \"#616161\",\n  postTitle: \"black\",\n  categoryTitle: \"#5C6BC0\",\n}\n\nexport const dark: Theme = {\n  bgColor: \"#303242\",\n  fontColor: \"#eee\",\n  postTitle: \"#eee\",\n  categoryTitle: \"#9FA8DA\"\n}\n\nconst themeGroup: ThemeGroup = {\n  light,\n  dark,\n}\n\nexport default themeGroup\n"],"sourceRoot":""}