{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Preparing/index.tsx","webpack://gatsby-starter-default/./src/pages/portfolio.tsx","webpack://gatsby-starter-default/./styles/pageLayout.ts"],"names":["themeMode","useContext","ThemeContext","theme","THEME","S","src","width","quality","formats","alt","placeholder","css","Image","TextBox","Text","style","fontWeight","fontColor","themeGroup","pageTitle","Container","Box","Title","Description"],"mappings":"s3EA+BA,IAzBkB,WAChB,IAAOA,GAAaC,gBAAWC,KAA/B,GACMC,EAAQC,KAAMJ,GAEpB,OACE,oBACE,QAAC,EAAAK,EAAD,CACEC,IAAI,6BACJC,MAAO,IACPC,QAAS,IACTC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,YACJC,YAAY,UACZC,IAAKC,EAPP,uBASA,eAAKD,IAAKE,IACR,gBAAMF,IAAKG,EAAKZ,GAAQa,MAAO,CAAEC,WAAY,SAA7C,YAGA,gBAAML,IAAKG,EAAKZ,IAAhB,WAQR,IAAMU,GAAQD,QAAH,OAELE,EAAO,0EAMPC,EAAO,SAACZ,GAAD,OAAkBS,QAAjB,0BAEHT,EAAMe,UAFJ,U,mHCfb,UAnBsB,WACpB,IAAOlB,GAAaC,gBAAWC,KAA/B,GACMC,EAAQgB,KAAWnB,GAEzB,OACE,QAAC,IAAD,CAAQoB,UAAU,cAChB,eAAKR,IAAKS,OACR,eAAKT,IAAG,CAAGU,KAAH,SACN,eAAKV,KAAKW,QAAMpB,IAAhB,cACA,eAAKS,KAAKY,QAAYrB,IAAtB,wBAEF,QAAC,IAAD,OACA,eAAKS,IAAKU,OACR,yB,yJCjBH,IAAMD,EAAS,uKAaTC,EAAG,mJAUHC,EAAQ,SAACpB,GAAD,OAAkBS,QAAjB,kEAIXT,EAAMe,UAJI,4BAKQf,EAAMe,UALd,iDAYRM,EAAc,SAACrB,GAAD,OAAkBS,QAAjB,yBAEjBT,EAAMe,UAFU","file":"component---src-pages-portfolio-tsx-60e3276c8d78cd98ce4f.js","sourcesContent":["import { css } from \"@emotion/react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport React, { useContext } from \"react\"\nimport { ThemeContext } from \"../../theme/ThemeContext\"\nimport THEME, { Theme } from \"../../theme/theme\"\n\nconst Preparing = () => {\n  const [themeMode] = useContext(ThemeContext)\n  const theme = THEME[themeMode]\n\n  return (\n    <div>\n      <StaticImage\n        src=\"../../images/preparing.png\"\n        width={500}\n        quality={100}\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        alt=\"preparing\"\n        placeholder=\"blurred\"\n        css={Image}\n      />\n      <div css={TextBox}>\n        <span css={Text(theme)} style={{ fontWeight: \"bold\" }}>\n          컨텐츠 준비중\n        </span>\n        <span css={Text(theme)}>입니다.</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Preparing\n\nconst Image = css``\n\nconst TextBox = css`\n  text-align: center;\n  margin-top: -1.3rem;\n  width: 105%;\n`\n\nconst Text = (theme: Theme) => css`\n  font-size: 1.5rem;\n  color: ${theme.fontColor};\n`\n","import React, { useContext } from \"react\"\nimport { Box, Container, Title, Description } from \"../../styles/pageLayout\"\nimport Preparing from \"../components/Preparing\"\nimport Layout from \"../components/Layout\"\nimport themeGroup from \"../theme/theme\"\nimport { ThemeContext } from \"../theme/ThemeContext\"\n\nconst PortfolioPage = () => {\n  const [themeMode] = useContext(ThemeContext)\n  const theme = themeGroup[themeMode]\n\n  return (\n    <Layout pageTitle=\"portfolio\">\n      <div css={Container}>\n        <div css={[Box]}>\n          <div css={Title(theme)}>Portfolio</div>\n          <div css={Description(theme)}>개발자 문성석의 포트폴리오입니다.</div>\n        </div>\n        <Preparing />\n        <div css={Box}>\n          <div></div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport default PortfolioPage\n","import { css } from \"@emotion/react\"\nimport THEME, { Theme } from \"../src/theme/theme\"\n\nexport const Container = css`\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  margin-top: 3rem;\n  display: flex;\n  flex-direction: column;\n\n  @media(max-width:425px) {\n    padding: 0 2rem 0 2rem;\n  }\n`\n\nexport const Box = css`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  text-decoration: none;\n  color: black;\n`\n\nexport const Title = (theme: Theme) => css`\n  font-size: 2.5rem;\n  padding-bottom: 0.5rem;\n  text-align: center;\n  color: ${theme.fontColor};\n  border-bottom: 1px solid ${theme.fontColor};\n\n  @media(max-width:425px) {\n    font-size: 2rem;\n  }\n`\n\nexport const Description = (theme: Theme) => css`\n  margin-top: 1rem;\n  color: ${theme.fontColor};\n  \n  @media(max-width:425px) {\n    font-size: 0.8rem;\n  }\n\n`\n"],"sourceRoot":""}