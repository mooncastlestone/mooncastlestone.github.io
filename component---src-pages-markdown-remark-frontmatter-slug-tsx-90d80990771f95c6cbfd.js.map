{"version":3,"sources":["webpack://gatsby-starter-default/./styles/markdown.ts","webpack://gatsby-starter-default/./src/components/Utterances/index.tsx","webpack://gatsby-starter-default/./src/pages/{MarkdownRemark.frontmatter__slug}.tsx"],"names":["Container","theme","css","mdFontColor","Utterances","React","repo","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","Template","markdownRemark","data","frontmatter","html","themeMode","useContext","ThemeContext","THEME","Layout","className","title","date","dangerouslySetInnerHTML","__html"],"mappings":"0MAGO,IAAMA,EAAY,SAACC,GAAD,OAAkBC,QAAjB,oOAmBbD,EAAME,YAnBM,sCAwBZF,EAAME,YAxBM,mHAiCZF,EAAME,YAjCM,kV,8BCEnBC,EAAaC,QAAW,YAAuC,IAApCC,EAAmC,EAAnCA,KAAML,EAA6B,EAA7BA,MAC/BM,GAAeC,iBAsBrB,OApBAC,sBAAgB,WACd,IAAMC,EAAaC,SAASC,cAAc,UAEpCC,EAAa,CACjBC,IATM,gCAUNR,OACAL,QACA,aAAc,WACdc,MAAO,iBACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQN,GAAYO,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACnDZ,EAAWa,aAAaF,EAAKC,MAG/Bf,EAAaiB,QAASC,YAAYf,KACjC,CAACJ,KAEG,eAAKoB,IAAKnB,OAGnBH,EAAWuB,YAAc,aAEzB,QCzBe,SAASC,EAAT,GAAkC,IACvCC,EADsC,EAAbC,KACzBD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACdC,GAAaC,gBAAWC,KAA/B,GACMlC,EAAQmC,KAAMH,GAEpB,OACE,yBACE,QAACI,EAAA,EAAD,MACE,eAAKnC,IAAKF,EAAUC,KAClB,eAAKqC,UAAU,aACb,eAAKA,UAAU,kBACb,cAAIA,UAAU,cAAcP,EAAYQ,QACxC,eAAKD,UAAU,aAAaP,EAAYS,QAE1C,eACEF,UAAU,mBACVG,wBAAyB,CAAEC,OAAQV,MAErC,eAAKM,UAAU,gBACb,QAAC,EAAD,CACEhC,KAAK,gCACLL,MAAM","file":"component---src-pages-markdown-remark-frontmatter-slug-tsx-90d80990771f95c6cbfd.js","sourcesContent":["import { css } from \"@emotion/react\"\nimport { Theme } from \"../src/theme/theme\"\n\nexport const Container = (theme: Theme) => css`\n  display: flex;\n  width: 83%;\n  height: 100vw;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n\n  .post-box {\n    width: 70%;\n  }\n\n  .post-introbox {\n    border-bottom: 1px solid #e0e0e0;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .post-title {\n    color: ${theme.mdFontColor};\n    margin-top: 1rem;\n  }\n\n  .post-date {\n    color: ${theme.mdFontColor};\n    display: flex;\n    align-items: flex-end;\n    margin-bottom: 1rem;\n  }\n\n  .post-description {\n    font-size: 1.1rem;\n    margin-top: 2rem;\n    color: ${theme.mdFontColor};\n    line-height: 2rem;\n  }\n\n  .comment-box {\n    margin: 3rem 0 3rem 0;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n\n    .post-box {\n      width: 85%;\n    }\n\n    .post-introbox {\n    }\n\n    .post-title {\n    }\n\n    .post-date {\n    }\n\n    .post-description {\n    }\n  }\n\n  @media (max-width: 425px) {\n\n    .post-box {\n      width: 90%;\n    }\n\n    .post-introbox {\n    }\n\n    .post-title {\n      font-size: 1.4rem;\n    }\n\n    .post-date {\n      font-size: 0.8rem;\n    }\n\n    .post-description {\n      font-size: 1rem;\n    }\n  }\n`\n\nexport const TocContainer = (theme: Theme) => css`\n  position: fixed;\n  border-left: 1px solid #bdbdbd;\n  top: 1;\n  right: 0;\n  width: 17rem;\n  padding: 0 2rem 0 1rem;\n\n  @media (max-width: 1000px) {\n    display: none;\n  }\n`\n","import React, { createRef, useLayoutEffect } from \"react\"\nimport { UtterancesProps } from '../../types/components'\n\nconst src = \"https://utteranc.es/client.js\"\n\nconst Utterances = React.memo(({ repo, theme }: UtterancesProps) => {\n  const containerRef = createRef<HTMLDivElement>()\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement(\"script\")\n\n    const attributes = {\n      src,\n      repo,\n      theme,\n      \"issue-term\": \"pathname\",\n      label: \"âœ¨ðŸ’¬ comments âœ¨\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n\n    containerRef.current!.appendChild(utterances)\n  }, [repo])\n\n  return <div ref={containerRef} />\n})\n\nUtterances.displayName = \"Utterances\"\n\nexport default Utterances\n","import React, { useContext } from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Container } from \"../../styles/markdown\"\nimport Layout from \"../components/Layout\"\nimport { ThemeContext } from \"../theme/ThemeContext\"\nimport THEME from \"../theme/theme\"\nimport Utterances from \"../components/Utterances\"\n\nexport default function Template({ data }: any) {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n  const [themeMode] = useContext(ThemeContext)\n  const theme = THEME[themeMode]\n\n  return (\n    <>\n      <Layout>\n        <div css={Container(theme)}>\n          <div className=\"post-box\">\n            <div className=\"post-introbox\">\n              <h1 className=\"post-title\">{frontmatter.title}</h1>\n              <div className=\"post-date\">{frontmatter.date}</div>\n            </div>\n            <div\n              className=\"post-description\"\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n            <div className=\"comment-box\">\n              <Utterances\n                repo=\"mooon3356/mooon3356.github.io\"\n                theme=\"github-light\"\n              ></Utterances>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      tableOfContents\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}