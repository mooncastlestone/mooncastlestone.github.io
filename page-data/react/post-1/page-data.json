{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/react/post-1/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"redux란\" style=\"position:relative;\"><a href=\"#redux%EB%9E%80\" aria-label=\"redux란 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux란?</h2>\n<p>Redux는 가장 많이 사용되는 <strong>상태 관리 라이브러리</strong>이다.</p>\n<p>리덕스를 사용하면 생성하게 될 컴포넌트들의 상태 관련 로직들을 다른 파일들로 분리시켜서 더욱 효율적으로 관리할 수 있으며 글로벌 상태 관리도 손쉽게 할 수 있는 장점이 있다.</p>\n<h2 id=\"redux-데이터-흐름\" style=\"position:relative;\"><a href=\"#redux-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%9D%90%EB%A6%84\" aria-label=\"redux 데이터 흐름 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux 데이터 흐름</h2>\n<p>Redux는 기존에 있던 데이터 흐름을 관리하는 방식인 MVC 패턴이 아닌, <strong>Flux 디자인 패턴 구조</strong>를 가지고 있다. MVC와 Flux는 어떤 차이점을 가지고 있을까?</p>\n<p>우선 MVC에 대해서 먼저 알아보자.</p>\n<h3 id=\"1-mvc란\" style=\"position:relative;\"><a href=\"#1-mvc%EB%9E%80\" aria-label=\"1 mvc란 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. MVC란?</h3>\n<p><strong>Model-View-Controller</strong>의 약자이며, 웹사이트를 개발할 때 <strong>3가지 형태</strong>로 역할을 나누어 개발하는 소프트웨어 디자인 패턴이다.</p>\n<ul>\n<li><strong>Model</strong> : 어플리케이션에 필요한 데이터의 형식이나 구조를 관리한다.</li>\n<li><strong>View</strong> : 사용자에게 보여지는 모든 부분을 담당한다.</li>\n<li><strong>Controller</strong> : 변화하는 데이터를 관리한다.</li>\n</ul>\n<p>작동되는 흐름은 아래와 같다.</p>\n<p><img src=\"https://images.velog.io/images/moon3356/post/08bcdcd3-4f79-441f-8ae4-2c1bbb8cac1b/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202021-08-26%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%201.56.24.png\" alt=\"\"></p>\n<p>이 MVC 패턴의 큰 특징 중 하나는 <strong>'양방향 데이터 흐름'</strong> 이다. 모델이 변경되면 뷰 또한 변하고, 뷰에서 변경이 일어나면, 모델 또한 변한다.</p>\n<p>이런 양방향 데이터 흐름은 <strong>설계가 쉽고 간단하게 코드를 작성</strong>할 수 있는 장점이 있다. 다만, 어플리케이션의 규모가 커지면 데이터 흐름 파악이 힘들어지게 되고, <strong>디버깅이 어려워져서</strong> 많은 시간이 소비된다.</p>\n<p>이러한 MVC 디자인 패턴의 단점을 보안하기 위해 Facebook에서 개발한 새로운 디자인 패턴이 Flux이다.</p>\n<h3 id=\"2-flux란\" style=\"position:relative;\"><a href=\"#2-flux%EB%9E%80\" aria-label=\"2 flux란 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Flux란?</h3>\n<p>Facebook에서 MVC 디자인 패턴의 단점을 보안하기 위해 개발한 웹 어플리케이션을 위한 디자인 패턴이다. <strong>단방향 데이터 흐름</strong>이라는 특징을 가지고 있다.</p>\n<p>작동되는 흐름은 다음과 같다.</p>\n<p><img src=\"https://images.velog.io/images/moon3356/post/f4fb01a1-c449-4741-a06b-45d40ce1947b/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202021-08-26%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%203.55.21.png\" alt=\"\"></p>\n<ol>\n<li>View에서 이벤트가 발생한다.</li>\n<li>액션 생성자는 개발자가 설정한 액션을 생성하고 dispatcher에 넘겨준다.</li>\n<li>dispatcher는 들어온 액션의 순서에 따라 스토어로 보낸다.</li>\n<li>액션을 받은 스토어는 액션에 맞게 상태를 변경한다.</li>\n<li>상태 변경이 완료되면 스토어는 자신을 구독하고 있는 컨트롤러 뷰에게 변경이 된 것을 알린다.</li>\n<li>상태가 변경된 것을 알게된 컨트롤러 뷰들은 변경된 상태를 스토어에게 요청을 보낸다.</li>\n<li>스토어가 새로운 상태를 넘겨주면, 컨트롤러 뷰는 자신 아래의 모든 뷰에게 새로운 상태를 렌더링하라고 알린다.</li>\n</ol>\n<p>위와 같은 과정으로 데이터들이 <strong>단방향</strong>으로 흐르게 된다. 따라서 데이터 변화를 MVC 패턴보다 <strong>훨씬 예측하기 쉽게 개발을 진행할 수 있다</strong>.</p>\n<h2 id=\"redux가-필요한-이유\" style=\"position:relative;\"><a href=\"#redux%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"redux가 필요한 이유 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux가 필요한 이유</h2>\n<p><strong>컴포넌트가 적은 프로젝트라면</strong>, 부모 컴포넌트에 있는 state를 한두 번에 걸쳐 사용할 수 있다. 그러나, <strong>컴포넌트가 많은 프로젝트라면</strong> 부모 컴포넌트로부터 state를 받아오기까지 많은 컴포넌트를 거쳐 state를 받아와야해서 상태 관리의 복잡성이 커지게 된다. Redux를 사용하면 이 문제를 해결할 수 있다.</p>\n<p>Redux를 사용하여 특정한 공간에 state를 저장하면, 다이렉트로 데이터들을 받아올 수 있다.</p>\n<h2 id=\"redux에서-사용되는-키워드들의-특징\" style=\"position:relative;\"><a href=\"#redux%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%ED%82%A4%EC%9B%8C%EB%93%9C%EB%93%A4%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"redux에서 사용되는 키워드들의 특징 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux에서 사용되는 키워드들의 특징</h2>\n<h3 id=\"1-action\" style=\"position:relative;\"><a href=\"#1-action\" aria-label=\"1 action permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Action</h3>\n<ul>\n<li>상태에 어떠한 변화가 필요하게 될 때, 액션을 발생시킨다.</li>\n<li>하나의 객체로 표현이 된다.</li>\n</ul>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"javascript\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{ </span><span class=\"mtk5 mtki\">//예시 코드</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  type: </span><span class=\"mtk6\">&quot;ORDER&quot;</span><span class=\"mtk1\">, </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  drink: {menu: </span><span class=\"mtk6\">&quot;Americano&quot;</span><span class=\"mtk1\">, size:</span><span class=\"mtk6\">&quot;Grande&quot;</span><span class=\"mtk1\">, iced: </span><span class=\"mtk7\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>액션 객체는 type을 필수적으로 가지고 있어야 하며, 그 외의 값들은 개발자 마음대로 가능하다.</p>\n<h3 id=\"2-action-creator\" style=\"position:relative;\"><a href=\"#2-action-creator\" aria-label=\"2 action creator permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Action Creator</h3>\n<ul>\n<li>액션을 만드는 함수이다.</li>\n<li>뷰에서 이벤트가 발생하여 액션을 생성할 때, 액션을 좀 더 편하게 생성하기 위해 사용된다.</li>\n</ul>\n<h3 id=\"3-store\" style=\"position:relative;\"><a href=\"#3-store\" aria-label=\"3 store permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Store</h3>\n<ul>\n<li>상태가 관리되는 오직 하나의 공간.</li>\n<li>Redux에서는 한 애플리케이션 당 하나의 store를 만들게 된다.</li>\n<li>store 안에는, 현재의 앱 상태와, reducer 함수가 들어가있고, 추가적으로 내장 함수들이 있다.</li>\n</ul>\n<h3 id=\"4-reducer\" style=\"position:relative;\"><a href=\"#4-reducer\" aria-label=\"4 reducer permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Reducer</h3>\n<ul>\n<li>변화를 일으키는 함수</li>\n<li>현재 State와 Action을 이용하여 새로운 state를 만들어냄</li>\n<li>Reducer에서는 전달받아온 Action 객체의 타입에 따라 다른 동작을 수행한다. 그에 따라서 새로운 State를 생성한다.</li>\n</ul>\n<h2 id=\"redux의-3가지-원칙\" style=\"position:relative;\"><a href=\"#redux%EC%9D%98-3%EA%B0%80%EC%A7%80-%EC%9B%90%EC%B9%99\" aria-label=\"redux의 3가지 원칙 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux의 3가지 원칙</h2>\n<ul>\n<li><strong>Single source of truth</strong></li>\n</ul>\n<p>동일한 데이터는 항상 <strong>같은 곳</strong>에서 데이터를 가지고 온다.\n데이터를 저장하는 하나뿐인 스토어가 있다.</p>\n<ul>\n<li><strong>State is read-only</strong></li>\n</ul>\n<p>기존에는 setState를 사용하여 state 값을 변경해줬었다.\nRedux에서는 Action이라는 함수를 이용하여 state 값을 변경해준다.</p>\n<ul>\n<li><strong>Changes are made with pure functions</strong></li>\n</ul>\n<p>변경은 순수 함수로만 가능하다.</p>\n<h2 id=\"redux-vs-context-api\" style=\"position:relative;\"><a href=\"#redux-vs-context-api\" aria-label=\"redux vs context api permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux vs Context API</h2>\n<p>리덕스는 전역 상태를 관리할 때 굉장히 효과적이다. 물론 리덕스를 사용하는 것만이 유일한 해결책은 아니다. 리액트에서 제공하는 Context API를 사용하여도 전역 상태 관리를 할 수 있다. 다만 리덕스는 아래와 같은 장점들을 가지고 있다.</p>\n<h3 id=\"1-미들웨어\" style=\"position:relative;\"><a href=\"#1-%EB%AF%B8%EB%93%A4%EC%9B%A8%EC%96%B4\" aria-label=\"1 미들웨어 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 미들웨어</h3>\n<p>리덕스에는 미들웨어라는 개념이 존재한다. 미들웨어를 사용하면 액션 객체가 리듀서에서 처리되기 전에 우리가 원하는 작업들을 수행할 수 있다.</p>\n<p>미들웨어는 주로 비동기 작업을 처리할 때 많이 사용된다.</p>\n<h3 id=\"2-유용한-함수와-hooks\" style=\"position:relative;\"><a href=\"#2-%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%95%A8%EC%88%98%EC%99%80-hooks\" aria-label=\"2 유용한 함수와 hooks permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 유용한 함수와 hooks</h3>\n<p>useSelector, useDispatch, useStore와 같은 hooks들을 사용하여 손쉽게 상태를 조회하거나 액션을 디스패치 할 수 있는 장점이 있다.</p>\n<h3 id=\"3-하나의-커다란-상태\" style=\"position:relative;\"><a href=\"#3-%ED%95%98%EB%82%98%EC%9D%98-%EC%BB%A4%EB%8B%A4%EB%9E%80-%EC%83%81%ED%83%9C\" aria-label=\"3 하나의 커다란 상태 permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 하나의 커다란 상태</h3>\n<p>Context API를 사용해서 글로벌 상태를 관리할 때는 기능별로 context를 만들어서 사용하는 것이 일반적이다. 반면 리덕스에서는 모든 글로벌 상태를 하나의 상태 객체에 넣어서 사용하기 때문에 여러 context를 생성하는 수고로움을 덜 수 있다.</p>\n<hr>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"custom-class before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>reference</h2>\n<p><a href=\"https://react.vlpt.us/redux/\">벨로퍼트와 함께하는 모던 리액트</a>\n<a href=\"https://code-cartoons.com/a-cartoon-guide-to-flux-6157355ab207\">A cartoon guide to Flux</a>\n<a href=\"https://medium.com/@rhodunda/mvc-design-pattern-fe76175a01de\">MVC design pattern</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk5 { color: #7F848E; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#redux%EB%9E%80\">Redux란?</a></p>\n</li>\n<li>\n<p><a href=\"#redux-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%9D%90%EB%A6%84\">Redux 데이터 흐름</a></p>\n<ul>\n<li><a href=\"#1-mvc%EB%9E%80\">1. MVC란?</a></li>\n<li><a href=\"#2-flux%EB%9E%80\">2. Flux란?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#redux%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\">Redux가 필요한 이유</a></p>\n</li>\n<li>\n<p><a href=\"#redux%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%ED%82%A4%EC%9B%8C%EB%93%9C%EB%93%A4%EC%9D%98-%ED%8A%B9%EC%A7%95\">Redux에서 사용되는 키워드들의 특징</a></p>\n<ul>\n<li><a href=\"#1-action\">1. Action</a></li>\n<li><a href=\"#2-action-creator\">2. Action Creator</a></li>\n<li><a href=\"#3-store\">3. Store</a></li>\n<li><a href=\"#4-reducer\">4. Reducer</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#redux%EC%9D%98-3%EA%B0%80%EC%A7%80-%EC%9B%90%EC%B9%99\">Redux의 3가지 원칙</a></p>\n</li>\n<li>\n<p><a href=\"#redux-vs-context-api\">Redux vs Context API</a></p>\n<ul>\n<li><a href=\"#1-%EB%AF%B8%EB%93%A4%EC%9B%A8%EC%96%B4\">1. 미들웨어</a></li>\n<li><a href=\"#2-%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%95%A8%EC%88%98%EC%99%80-hooks\">2. 유용한 함수와 hooks</a></li>\n<li><a href=\"#3-%ED%95%98%EB%82%98%EC%9D%98-%EC%BB%A4%EB%8B%A4%EB%9E%80-%EC%83%81%ED%83%9C\">3. 하나의 커다란 상태</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#reference\">reference</a></p>\n</li>\n</ul>","frontmatter":{"date":"September 01, 2021","slug":"/react/post-1/","title":"Redux 정리"}}},"pageContext":{"id":"4e450299-2eb6-5f75-94a8-44fbfa3164c0","frontmatter__slug":"/react/post-1/","__params":{"frontmatter__slug":"react"}}},"staticQueryHashes":["2842829498"]}